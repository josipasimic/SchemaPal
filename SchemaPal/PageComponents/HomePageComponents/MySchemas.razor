@using SchemaPal.DataTransferObjects.API;
@using SchemaPal.Services;
@using SchemaPal.Services.SchemaMakerServices;
@using System.Net

@inject NavigationManager _navigationManager
@inject ISchemaPalApiService _schemaPalApiService
@inject IUserSessionService _userSessionService
@inject IResultProcessor _resultProcessor
@inject ISchemaInjectionService _schemaInjectionService

<p class="message">@Message</p>
<div class="my-schemas">
    @foreach (var schema in this.UserSchemas)
    {
        <div class="schema-item">
            <div class="schema-name" @onclick="() => OpenUserSchema(schema.Id)">
                <h4><strong>@schema.Name</strong></h4>
                <p>(Zadnje ažurirano @schema.LastSaved)</p>
            </div>
            <button class="btn large-bold-font" title="Obriši shemu" @onclick="() => DeleteSchema(schema.Id)">&#128465</button>
        </div>
    }
</div>

@code {
    private List<ShortSchemaRecord> UserSchemas = new List<ShortSchemaRecord>();

    private string Message;

    protected override async Task OnInitializedAsync()
    {
        await SetData();
    }

    private async Task SetData()
    {
        var result = await _schemaPalApiService.GetDatabaseSchemasForLoggedInUser();

        if (result.IsSuccess)
        {
            Message = string.Empty;
            UserSchemas = result.Value;

            return;
        }

        Message = await _resultProcessor.ProcessFailedResult(result);
        UserSchemas = [];
    }

    private async Task OpenUserSchema(Guid schemaId)
    {
        var result = await _schemaInjectionService.PushSchemaFromAPI(schemaId);

        if (result.IsFailed)
        {
            Message = result.Errors.First().Message;
            return;
        }

        _navigationManager.NavigateTo("/schema-maker");
    }

    private async Task DeleteSchema(Guid schemaId)
    {
        var result = await _schemaPalApiService.DeleteDatabaseSchema(schemaId);

        if (result.IsFailed)
        {
            Message = result.Errors.First().Message;
            return;
        }

        await SetData();
        Message = "Shema je uspješno obrisana.";
    }
}
