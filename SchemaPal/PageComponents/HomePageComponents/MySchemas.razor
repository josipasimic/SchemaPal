@using SchemaPal.DataTransferObjects.API;
@using SchemaPal.Services;

@inject NavigationManager _navigationManager
@inject ISchemaPalApiService _schemaPalApiService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<div class="my-schemas">
    @foreach (var schema in this.UserSchemas)
    {
        <div class="schema-item" @onclick="() => OpenUserSchema(schema.Id)">
            <h4>@schema</h4>
        </div>
    }
</div>

@code {
    private List<(int Id, string Name)> UserSchemas = new List<(int Id, string Name)>();

    protected override async Task OnInitializedAsync()
    {
        UserSchemas = await GetUserSchemas();
    }

    private async Task<List<(int Id, string Name)>> GetUserSchemas()
    {
        var loggedInUser = await sessionStorage.GetItemAsync<int>("loggedInUserId");
        var schemas = await _schemaPalApiService.GetDatabaseSchemasForUser(loggedInUser);

        return schemas;
    }

    private void OpenUserSchema(int schemaId)
    {
        _navigationManager.NavigateTo("/schema-maker?schemaId=" + schemaId);
    }
}
