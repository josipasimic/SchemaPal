@code {
    [Parameter]
    public List<string> Options { get; set; }

    [Parameter]
    public List<string> OptionNames { get; set; }

    [Parameter]
    public EventCallback<List<string>> OnSelectionChanged { get; set; }

    private List<string> selectedItems = new List<string>();

    private List<string> selectedItemsNames = new List<string>();

    private void OnCheckboxChanged(ChangeEventArgs e, int optionIndex)
    {
        var isChecked = (bool)e.Value;

        if (isChecked)
        {
            selectedItems.Add(Options[optionIndex]);
            selectedItemsNames.Add(OptionNames[optionIndex]);
        }
        else
        {
            selectedItems.Remove(Options[optionIndex]);
            selectedItemsNames.Remove(OptionNames[optionIndex]);
        }

        OnSelectionChanged.InvokeAsync(selectedItems);
    }
}

<div class="multiselect-dropdown">
    <button class="dropdown width-color-override">@string.Join(", ", selectedItems.Count == 0 ? new[] { "Odaberi" } : selectedItemsNames)</button>
    <div class="dropdown-content">
        @for(int i = 0; i < Options.Count; i++)
        {
            int index = i;
            <g key="@i">
                <label class="gray-font-color">
                    <input type="checkbox" @onchange="@(e => OnCheckboxChanged(e, index))" checked="@selectedItems.Contains(Options[index])" />
                    @OptionNames[index]
                </label>
            </g>          
        }
    </div>
</div
