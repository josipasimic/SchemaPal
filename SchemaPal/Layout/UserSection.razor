@using SchemaPal.Enums
@using SchemaPal.Helpers
@using SchemaPal.Services

@inject NavigationManager _navigationManager
@inject IUserSessionService _userSessionService

<div>
    <div class="user-section"
        style="display: @SectionDisplay">
        <span>Koristite aplikaciju kao: <strong>@UsernameText</strong></span>
        <a class="user-section-btn" @onclick="HandleButtonClick">@(ButtonMode == ButtonMode.Login ? "Prijava" : "Odjava")</a>
    </div>
</div>

@code {
    private ButtonMode ButtonMode;
    private string UsernameText = string.Empty;

    private string SectionDisplay = "flex";

    protected override async Task OnInitializedAsync()
    {
        await SetData();

        // Omogući ažuriranje komponente iz drugih stranica (konkretno, ovo pozivamo s Login i LoginRedirect stranica,
        // kad se korisnik uspješno prijavi ili nastavi kao gost, kako bi se podaci o korisniku ažurirali).
        UserSectionComponentHelper.OnUserStatusChange += RefreshState;
    }

    private async Task RefreshState()
    {
        await SetData();

        await InvokeAsync(StateHasChanged);
    }

    private async Task SetData()
    {
        SectionDisplay = "flex";

        var isUserGuest = await _userSessionService.IsUserGuest();
        if (isUserGuest)
        {
            UsernameText = "gost";
            ButtonMode = ButtonMode.Login;

            return;
        }

        var isUserLoggedIn = await _userSessionService.IsUserLoggedIn();
        if (isUserLoggedIn)
        {
            var loggedInUsername = await _userSessionService.GetLoggedInUsername();
            UsernameText = loggedInUsername;
            ButtonMode = ButtonMode.Logout;

            return;
        }

        // Sakrij cijeli dio ako korisnik nije ni gost ni prijavljen (prvi pristup aplikaciji).
        SectionDisplay = "none";
    }

    private async Task HandleButtonClick()
    {
        if (ButtonMode == ButtonMode.Logout)
        {
            await _userSessionService.EndUserSession();

            await SetData();
            await RefreshState();
        }

        _navigationManager.NavigateTo("/login-redirect");
    }
}
