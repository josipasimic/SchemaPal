@page "/signup"

@using SchemaPal.DataTransferObjects.API
@using SchemaPal.Services

@inject NavigationManager _navigationManager
@inject ISchemaPalApiService _schemaPalApiService
@inject IUserSessionService _userSessionService

<PageTitle>Registracija</PageTitle>

<div class="go-back">
    <button class="btn" @onclick="NavigateToLoginRedirect">&#129032 Natrag na opcije prijave</button>
</div>

<div class="form">
    <h3 class="signup-label">Registracija</h3>

    <EditForm Model="@UserData" OnValidSubmit="HandleSignup">
        <div style="display: @FormDisplay">
            <div class="signup-section">
                <label class="name-label" for="username">Korisničko ime:</label>
                <InputText class="name-input signup-name-input" @bind-Value="UserData.Username" />
            </div>
            <div class="signup-section">
                <label class="name-label" for="password">Lozinka:</label>
                <InputText class="name-input signup-name-input" @bind-Value="UserData.Password" type="password" />
            </div>
            <div class="signup-section">
                <label class="name-label" for="password">Potvrdi lozinku:</label>
                <InputText class="name-input signup-name-input" @bind-Value="UserData.PasswordConfirmation" type="password" />
            </div>
            <div class="signup-section">
                <button class="btn signup-button" type="submit">Registriraj se</button>
            </div>
        </div>
    </EditForm>

    <p>@SignUpMessage</p>
</div>

@code {
    private UserRegistration UserData = new UserRegistration();
    private string SignUpMessage = string.Empty;

    private string FormDisplay = "block";

    protected override async Task OnInitializedAsync()
    {
        var isLoggedIn = await _userSessionService.IsUserLoggedIn();
        if (isLoggedIn)
        {
            _navigationManager.NavigateTo("/");
        };
    }

    private async Task HandleSignup()
    {
        var registrationResult = await _schemaPalApiService.RegisterUser(UserData);

        if (registrationResult.IsSuccess)
        {
            FormDisplay = "none";
            SignUpMessage = "Uspješno ste se registrirali! Prijavite se u aplikaciju.";
        }
        else
        {
            var errorMessage = registrationResult.Errors.First().Message;
            SignUpMessage = errorMessage;
        }
    }

    private void NavigateToLoginRedirect()
    {
        _navigationManager.NavigateTo("/login-redirect");
    }
}