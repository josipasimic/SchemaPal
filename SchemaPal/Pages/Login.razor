@page "/login"

@using SchemaPal.DataTransferObjects
@using SchemaPal.DataTransferObjects.API
@using SchemaPal.Helpers
@using SchemaPal.Services

@inject NavigationManager _navigationManager
@inject Blazored.SessionStorage.ISessionStorageService _sessionStorage
@inject ISchemaPalApiService _schemaPalApiService

<PageTitle>Prijava</PageTitle>

<div class="go-back">
    <button class="btn" @onclick="NavigateToLoginRedirect">&#129032 Natrag na opcije prijave</button>
</div>

<div class="form">
    <h3 class="login-label">Prijava</h3>

    <EditForm Model="@UserLoginData" OnValidSubmit="HandleLogin">
        <div class="login-section">
            <label class="name-label" for="username">Korisničko ime:</label>
            <InputText class="name-input login-name-input" @bind-Value="UserLoginData.Username" />
        </div>
        <div class="login-section">
            <label class="name-label" for="password">Lozinka:</label>
            <InputText class="name-input login-name-input" @bind-Value="UserLoginData.Password" type="password" />
        </div>
        <div class="login-section">
            <button class="btn login-button" type="submit">Prijavi se</button>
        </div>
    </EditForm>

    <p>@LoginMessage</p>
</div>

@code {
    private UserLogin UserLoginData = new UserLogin();
    private string LoginMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var isLoggedIn = await _sessionStorage.GetItemAsync<bool>("isLoggedIn");
        if (isLoggedIn)
        {
            _navigationManager.NavigateTo("/");
        };
    }

    private async Task HandleLogin()
    {
        var loginResult = await _schemaPalApiService.LoginUser(UserLoginData);

        if (loginResult.IsSuccess)
        {
            await _sessionStorage.SetItemAsync<bool>("isGuest", false);

            await _sessionStorage.SetItemAsync<bool>("isLoggedIn", true);
            await _sessionStorage.SetItemAsync<string>("loggedInUsername", UserLoginData.Username);

            // Ažuriraj komponentu koja prikazuje login/logout gumb i korisničko ime.
            await UserSectionComponentHelper.NotifyUserStatusChange();

            _navigationManager.NavigateTo("/");
        }
        else
        {
            var errorMessage = loginResult.Errors.First().Message;
            LoginMessage = errorMessage;
        }
    }

    private void NavigateToLoginRedirect()
    {
        _navigationManager.NavigateTo("/login-redirect");
    }
}