@page "/login"

@using SchemaPal.DataTransferObjects
@using SchemaPal.Services

@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject ISchemaPalApiService _schemaPalApiService

<PageTitle>Prijava</PageTitle>

<div class="go-back">
    <button class="btn" @onclick="NavigateToLoginRedirect">&#129032 Natrag na opcije prijave</button>
</div>

<div class="form">
    <h3 class="login-label">Prijava</h3>

    <EditForm Model="@UserData" OnValidSubmit="HandleLogin">
        <div class="login-section">
            <label class="name-label" for="username">Korisničko ime:</label>
            <InputText class="name-input login-name-input" @bind-Value="UserData.Username" />
        </div>
        <div class="login-section">
            <label class="name-label" for="password">Lozinka:</label>
            <InputText class="name-input login-name-input" @bind-Value="UserData.Password" type="password" />
        </div>
        <div class="login-section">
            <button class="btn login-button" type="submit">Prijavi se</button>
        </div>
    </EditForm>

    <p>@LoginMessage</p>
</div>

@code {
    private User UserData = new User();
    private string LoginMessage = string.Empty;

    private async Task HandleLogin()
    {
        var userId = await _schemaPalApiService.ValidateUser(UserData);

        if (userId > 0)
        {
            await sessionStorage.SetItemAsync<bool>("isGuest", false);
            await sessionStorage.SetItemAsync<bool>("isLoggedIn", true);
            await sessionStorage.SetItemAsync<int>("loggedInUserId", userId);

            NavigationManager.NavigateTo("/");
        }
        else
        {
            LoginMessage = "Neispravno korisničko ime ili lozinka.";
        }
    }

    private void NavigateToLoginRedirect()
    {
        NavigationManager.NavigateTo("/login-redirect");
    }
}